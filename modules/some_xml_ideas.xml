<assessment>

	<collection>
		<namespace>          // Enum
		<type></type>        // string
		<keys>               // list
			<key>            // container
				<name>       // field-name
				<datatype>   // Enum
				<operation>  // Enum
				<nil>        // boolean
				<value>
			</key>
		</keys>

		<behaviors>          // list
			<behavior>       // container
				<name>
				<datatype>   // Enum
				<value>
			</behavior>
		</behaviors>

		<filters>
			<filter>
				<action></action> // include/exclude
				<filter-keys>
					<filter-key>
						<name>
						<datatype>
						<operation>
						<nil>
						<value>
					</filter-key>
				</filter-keys>
			</filter>
		</filters>
	</collection>

	<system-characteristics>
		<item>
			<namespace></namespace>
			<type></type>
			<status></status>
			<unique-identifier></unique-identifier>
			<fields> <!-- The list of elements in this item -->
				<field> <!-- A single element in this item -->
					<name></name>
					<datatype></datatype>
					<value></value>
					
					<records> <!-- A "list of rows from the database" -->
						<record> <!-- A "single row" from the database -->
							<record-name></record-name>
							<record-fields> <!-- A "list of columns in the row" -->
								<record-field> <!-- A "single column" in the row -->
									<record-field-name></record-field-name>
									<record-field-datatype></record-field-datatype>
									<record-field-value></record-field-value>
								</record-field>
							</record-fields>
						</record>
					</records>
				</field>
			</fields>
		</item>
	</system-characteristics>

	<evaluation>
		<existence-check>
		<item-check>
		<comparison>
			<fields>
				<field>
					<name>
					<datatype>
					<operation>  // Enum, with new value "isNil"
					<value>
				</field>
			</fields>
		</comparison>
	</evaluation>

</assessment>



<collection>
	<objects>
		<object></object>
	</objects>
	<filters>
		<filter></filter>
	</filters>
	<variables>
		<constant-variable></constant-variable>
		<external-variable></external-variable>
		<local-variable>
			[function-groups, literal-component, variable-component, object-component]
			<arithmetic></arithmetic>
			<begin></begin>
			<concat></concat>
			<end></end>
			<escape-regex></escape-regex>
			<split></split>
			<substring></substring>
			<time-difference></time-difference>
			<regex-capture></regex-capture>
			<unique></unique>
			<count></count>
			<glob-to-regex></glob-to-regex>
		</local-variable>
	</variables>
</collection>


<evaluation>
	<states>
		<state></state>
	</states>
	<variables>
		<constant-variable></constant-variable>
		<external-variable></external-variable>
		<local-variable>
			[function-groups, literal-component, variable-component, object-component]
		</local-variable>
	</variables>
</evaluation>

